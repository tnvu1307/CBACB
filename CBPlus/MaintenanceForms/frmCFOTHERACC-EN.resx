<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="InitDialogFailed" xml:space="preserve">
    <value>Cannot initialize windows!</value>
  </data>
  <data name="btnOK" xml:space="preserve">
    <value>&amp;Ok</value>
  </data>
  <data name="btnCancel" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="lblCaption0" xml:space="preserve">
    <value>Contact information.</value>
  </data>
  <data name="lblCaption1" xml:space="preserve">
    <value>Add new remittance information</value>
  </data>
  <data name="lblCaption2" xml:space="preserve">
    <value>Modify contact event.</value>
  </data>
  <data name="SavingFailed" xml:space="preserve">
    <value>Saving failed!</value>
  </data>
  <data name="AddnewSuccessful" xml:space="preserve">
    <value>Addnew successfully!</value>
  </data>
  <data name="EditSuccessful" xml:space="preserve">
    <value>Saving successfully!</value>
  </data>
  <data name="frmCFOTHERACC" xml:space="preserve">
    <value>Outward remittance information</value>
  </data>
  <data name="Mandatory" xml:space="preserve">
    <value>The field [@] should not be empty!</value>
  </data>
  <data name="btnApply" xml:space="preserve">
    <value>&amp;Apply</value>
  </data>
  <data name="BANKACC" xml:space="preserve">
    <value>Bank Account:</value>
  </data>
  <data name="BANKACNAME" xml:space="preserve">
    <value>Beneficiary Name:</value>
  </data>
  <data name="BANKNAME" xml:space="preserve">
    <value>Bank Name:</value>
  </data>
  <data name="CITYEF" xml:space="preserve">
    <value>City Name:</value>
  </data>
  <data name="CITYBANK" xml:space="preserve">
    <value>Branch:</value>
  </data>
  <data name="AFACCTNO" xml:space="preserve">
    <value>Contract No:</value>
  </data>
  <data name="CFOTHERACC" xml:space="preserve">
    <value>CFOTHERACC</value>
  </data>
  <data name="PARAMETER" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="TYPE" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="CUSTID" xml:space="preserve">
    <value>Beneficiary number.:</value>
  </data>
  <data name="CIACCOUNT" xml:space="preserve">
    <value>CI Account:</value>
  </data>
  <data name="CINAME" xml:space="preserve">
    <value>Full Name:</value>
  </data>
  <data name="msgAFCIACCTNO" xml:space="preserve">
    <value>AF Account IS NOT SAME CI Account !</value>
  </data>
  <data name="msgNOTISBANK" xml:space="preserve">
    <value>Is not bank !</value>
  </data>
  <data name="msgBANKACCMandatory" xml:space="preserve">
    <value>The field "Bank Account" should not be empty!</value>
  </data>
  <data name="msgBANKACNameMandatory" xml:space="preserve">
    <value>The field "Beneficiary Name" should not be empty!</value>
  </data>
  <data name="msgBANKNameMandatory" xml:space="preserve">
    <value>The field "Bank Name" should not be empty!</value>
  </data>
  <data name="msgCIAccountMandatory" xml:space="preserve">
    <value>Trường "Mã tiểu khoản" bắt buộc phải nhập!</value>
  </data>
  <data name="BANKACCTNONOTLINK" xml:space="preserve">
    <value>The bank account number is not connected with PHS ! Continue ?</value>
  </data>
  <data name="msgCITYBANKMandatory" xml:space="preserve">
    <value>The field "Branch" should not be empty!</value>
  </data>
  <data name="msgCITYNameMandatory" xml:space="preserve">
    <value>The field "City Name" should not be empty!</value>
  </data>
  <data name="ACNIDCODE" xml:space="preserve">
    <value>ID code</value>
  </data>
  <data name="ACNIDDATE" xml:space="preserve">
    <value>Issue date</value>
  </data>
  <data name="ACNIDPLACE" xml:space="preserve">
    <value>Issue place</value>
  </data>
  <data name="FEECD" xml:space="preserve">
    <value>Fee code</value>
  </data>
  <data name="msgFEECDIsMandatory" xml:space="preserve">
    <value>Field "Fee code" must be entered!</value>
  </data>
  <data name="grpParameter0" xml:space="preserve">
    <value>Internal cash transfer</value>
  </data>
  <data name="BANKCODE" xml:space="preserve">
    <value>Bank code</value>
  </data>
  <data name="ISBANKACCTNO" xml:space="preserve">
    <value>Account connected with PHS</value>
  </data>
  <data name="DEFAULTACCT" xml:space="preserve">
    <value>Default account</value>
  </data>
</root>